ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motor.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._ZL11time_periodt,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_ZL11time_periodt:
  26              	.LVL0:
  27              	.LFB366:
  28              		.file 1 "Core/Src/motor.cpp"
   1:Core/Src/motor.cpp **** #include"motor.h"
   2:Core/Src/motor.cpp **** 
   3:Core/Src/motor.cpp **** static uint16_t time_period(uint16_t PWM_frequency)
   4:Core/Src/motor.cpp **** {
  29              		.loc 1 4 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
   5:Core/Src/motor.cpp ****         if (PWM_frequency < 2000) { //MIN PWM_FREQUENCY = 1281.738 for time period to be 16 bit
  34              		.loc 1 5 9 view .LVU1
   6:Core/Src/motor.cpp ****                 //_Error_Handler(__FILE__, __LINE__);
   7:Core/Src/motor.cpp ****         }
   8:Core/Src/motor.cpp ****         return ((168000000 / 2) / PWM_frequency) - 1; 		// In Center aligned mode period doubles he
  35              		.loc 1 8 9 view .LVU2
  36              		.loc 1 8 33 is_stmt 0 view .LVU3
  37 0000 034B     		ldr	r3, .L2
  38 0002 93FBF0F0 		sdiv	r0, r3, r0
  39              	.LVL1:
  40              		.loc 1 8 50 view .LVU4
  41 0006 80B2     		uxth	r0, r0
  42              		.loc 1 8 52 view .LVU5
  43 0008 0138     		subs	r0, r0, #1
   9:Core/Src/motor.cpp **** }
  44              		.loc 1 9 1 view .LVU6
  45 000a 80B2     		uxth	r0, r0
  46 000c 7047     		bx	lr
  47              	.L3:
  48 000e 00BF     		.align	2
  49              	.L2:
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 2


  50 0010 00BD0105 		.word	84000000
  51              		.cfi_endproc
  52              	.LFE366:
  54              		.section	.text._ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	_ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt:
  62              	.LVL2:
  63              	.LFB367:
  10:Core/Src/motor.cpp **** 
  11:Core/Src/motor.cpp **** /* SET DUTYCYCLE primary function */
  12:Core/Src/motor.cpp **** static void set_DutyCycle_Primary(TIM_HandleTypeDef *htim, uint32_t Channel, uint16_t dutyCycle)
  13:Core/Src/motor.cpp **** {
  64              		.loc 1 13 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		.loc 1 13 1 is_stmt 0 view .LVU8
  69 0000 70B5     		push	{r4, r5, r6, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 16
  72              		.cfi_offset 4, -16
  73              		.cfi_offset 5, -12
  74              		.cfi_offset 6, -8
  75              		.cfi_offset 14, -4
  76 0002 0646     		mov	r6, r0
  77 0004 0D46     		mov	r5, r1
  78 0006 1446     		mov	r4, r2
  14:Core/Src/motor.cpp ****         uint16_t mapped_value;
  79              		.loc 1 14 9 is_stmt 1 view .LVU9
  15:Core/Src/motor.cpp ****         mapped_value = (time_period(8000) * dutyCycle) / 65535;	 
  80              		.loc 1 15 9 view .LVU10
  81              		.loc 1 15 36 is_stmt 0 view .LVU11
  82 0008 4FF4FA50 		mov	r0, #8000
  83              	.LVL3:
  84              		.loc 1 15 36 view .LVU12
  85 000c FFF7FEFF 		bl	_ZL11time_periodt
  86              	.LVL4:
  87              		.loc 1 15 43 view .LVU13
  88 0010 04FB00F2 		mul	r2, r4, r0
  89              		.loc 1 15 56 view .LVU14
  90 0014 0D4B     		ldr	r3, .L12
  91 0016 83FB0213 		smull	r1, r3, r3, r2
  92 001a 1344     		add	r3, r3, r2
  93 001c D217     		asrs	r2, r2, #31
  94 001e C2EBE332 		rsb	r2, r2, r3, asr #15
  95              	.LVL5:
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
  96              		.loc 1 16 9 is_stmt 1 view .LVU15
  97 0022 1DB9     		cbnz	r5, .L5
  98              		.loc 1 16 9 is_stmt 0 discriminator 1 view .LVU16
  99 0024 3368     		ldr	r3, [r6]
 100 0026 92B2     		uxth	r2, r2
 101              		.loc 1 16 9 discriminator 1 view .LVU17
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 3


 102 0028 5A63     		str	r2, [r3, #52]
 103              	.LVL6:
 104              	.L4:
  17:Core/Src/motor.cpp **** }
 105              		.loc 1 17 1 view .LVU18
 106 002a 70BD     		pop	{r4, r5, r6, pc}
 107              	.LVL7:
 108              	.L5:
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 109              		.loc 1 16 9 discriminator 2 view .LVU19
 110 002c 042D     		cmp	r5, #4
 111 002e 05D0     		beq	.L10
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 112              		.loc 1 16 9 discriminator 4 view .LVU20
 113 0030 082D     		cmp	r5, #8
 114 0032 07D0     		beq	.L11
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 115              		.loc 1 16 9 discriminator 6 view .LVU21
 116 0034 3368     		ldr	r3, [r6]
 117 0036 92B2     		uxth	r2, r2
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 118              		.loc 1 16 9 discriminator 6 view .LVU22
 119 0038 1A64     		str	r2, [r3, #64]
 120              		.loc 1 17 1 discriminator 6 view .LVU23
 121 003a F6E7     		b	.L4
 122              	.L10:
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 123              		.loc 1 16 9 discriminator 3 view .LVU24
 124 003c 3368     		ldr	r3, [r6]
 125 003e 92B2     		uxth	r2, r2
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 126              		.loc 1 16 9 discriminator 3 view .LVU25
 127 0040 9A63     		str	r2, [r3, #56]
 128 0042 F2E7     		b	.L4
 129              	.L11:
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 130              		.loc 1 16 9 discriminator 5 view .LVU26
 131 0044 3368     		ldr	r3, [r6]
 132 0046 92B2     		uxth	r2, r2
  16:Core/Src/motor.cpp ****         __HAL_TIM_SET_COMPARE(htim, Channel, mapped_value);		
 133              		.loc 1 16 9 discriminator 5 view .LVU27
 134 0048 DA63     		str	r2, [r3, #60]
 135 004a EEE7     		b	.L4
 136              	.L13:
 137              		.align	2
 138              	.L12:
 139 004c 01800080 		.word	-2147450879
 140              		.cfi_endproc
 141              	.LFE367:
 143              		.section	.text._ZL13set_DutyCycleP12motor_configt,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	_ZL13set_DutyCycleP12motor_configt:
 151              	.LVL8:
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 4


 152              	.LFB368:
  18:Core/Src/motor.cpp **** 
  19:Core/Src/motor.cpp **** static void set_DutyCycle(motor_config *m, uint16_t dutyCycle)
  20:Core/Src/motor.cpp **** {
 153              		.loc 1 20 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		.loc 1 20 1 is_stmt 0 view .LVU29
 158 0000 08B5     		push	{r3, lr}
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 3, -8
 162              		.cfi_offset 14, -4
 163 0002 0A46     		mov	r2, r1
  21:Core/Src/motor.cpp ****         set_DutyCycle_Primary(m->htim, m->channel, dutyCycle);
 164              		.loc 1 21 9 is_stmt 1 view .LVU30
 165              		.loc 1 21 30 is_stmt 0 view .LVU31
 166 0004 C169     		ldr	r1, [r0, #28]
 167              	.LVL9:
 168              		.loc 1 21 30 view .LVU32
 169 0006 8069     		ldr	r0, [r0, #24]
 170              	.LVL10:
 171              		.loc 1 21 30 view .LVU33
 172 0008 FFF7FEFF 		bl	_ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
 173              	.LVL11:
  22:Core/Src/motor.cpp **** }
 174              		.loc 1 22 1 view .LVU34
 175 000c 08BD     		pop	{r3, pc}
 176              		.cfi_endproc
 177              	.LFE368:
 179              		.global	__aeabi_f2d
 180              		.global	__aeabi_ddiv
 181              		.global	__aeabi_dmul
 182              		.global	__aeabi_d2uiz
 183              		.section	.text._ZL14set_motorOmegaP12motor_configf,"ax",%progbits
 184              		.align	1
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	_ZL14set_motorOmegaP12motor_configf:
 191              	.LVL12:
 192              	.LFB370:
  23:Core/Src/motor.cpp **** 
  24:Core/Src/motor.cpp **** static void set_motorDirection(motor_config *m, Direction d)
  25:Core/Src/motor.cpp **** {
  26:Core/Src/motor.cpp ****         if (d == Direction::CLOCKWISE)       
  27:Core/Src/motor.cpp ****         {
  28:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in1_port, m->in1_pin, GPIO_PIN_SET);
  29:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
  30:Core/Src/motor.cpp ****                 
  31:Core/Src/motor.cpp ****         }
  32:Core/Src/motor.cpp ****         else if (d == Direction::ANTICLOCKWISE)  
  33:Core/Src/motor.cpp ****         {
  34:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in1_port, m->in1_pin, GPIO_PIN_RESET);
  35:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_SET);
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 5


  36:Core/Src/motor.cpp ****         }
  37:Core/Src/motor.cpp ****         else
  38:Core/Src/motor.cpp ****         {
  39:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in1_port, m->in1_pin, GPIO_PIN_RESET);
  40:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
  41:Core/Src/motor.cpp ****         }
  42:Core/Src/motor.cpp **** }
  43:Core/Src/motor.cpp **** 
  44:Core/Src/motor.cpp **** static void set_motorOmega(motor_config *m, float omega)
  45:Core/Src/motor.cpp **** {
 193              		.loc 1 45 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		.loc 1 45 1 is_stmt 0 view .LVU36
 198 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 199              	.LCFI2:
 200              		.cfi_def_cfa_offset 24
 201              		.cfi_offset 3, -24
 202              		.cfi_offset 4, -20
 203              		.cfi_offset 5, -16
 204              		.cfi_offset 6, -12
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 0446     		mov	r4, r0
 208 0004 10EE105A 		vmov	r5, s0
  46:Core/Src/motor.cpp ****         uint16_t new_omega = (65535.0 / m->max_omega) * (omega);
 209              		.loc 1 46 9 is_stmt 1 view .LVU37
 210              		.loc 1 46 44 is_stmt 0 view .LVU38
 211 0008 0068     		ldr	r0, [r0]	@ float
 212              	.LVL13:
 213              		.loc 1 46 44 view .LVU39
 214 000a FFF7FEFF 		bl	__aeabi_f2d
 215              	.LVL14:
 216              		.loc 1 46 44 view .LVU40
 217 000e 0246     		mov	r2, r0
 218 0010 0B46     		mov	r3, r1
 219              		.loc 1 46 39 view .LVU41
 220 0012 0BA1     		adr	r1, .L18
 221 0014 D1E90001 		ldrd	r0, [r1]
 222 0018 FFF7FEFF 		bl	__aeabi_ddiv
 223              	.LVL15:
 224 001c 0646     		mov	r6, r0
 225 001e 0F46     		mov	r7, r1
 226              		.loc 1 46 58 view .LVU42
 227 0020 2846     		mov	r0, r5	@ float
 228 0022 FFF7FEFF 		bl	__aeabi_f2d
 229              	.LVL16:
 230 0026 0246     		mov	r2, r0
 231 0028 0B46     		mov	r3, r1
 232              		.loc 1 46 55 view .LVU43
 233 002a 3046     		mov	r0, r6
 234 002c 3946     		mov	r1, r7
 235 002e FFF7FEFF 		bl	__aeabi_dmul
 236              	.LVL17:
 237              		.loc 1 46 18 view .LVU44
 238 0032 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 6


 239              	.LVL18:
  47:Core/Src/motor.cpp ****         set_DutyCycle(m, new_omega);
 240              		.loc 1 47 9 is_stmt 1 view .LVU45
 241              		.loc 1 47 22 is_stmt 0 view .LVU46
 242 0036 81B2     		uxth	r1, r0
 243 0038 2046     		mov	r0, r4
 244              	.LVL19:
 245              		.loc 1 47 22 view .LVU47
 246 003a FFF7FEFF 		bl	_ZL13set_DutyCycleP12motor_configt
 247              	.LVL20:
  48:Core/Src/motor.cpp **** 	//printf("omega = %d", (int)(omega*100));
  49:Core/Src/motor.cpp **** 	// printf("\tOCR = %d", (int)new_omega);
  50:Core/Src/motor.cpp **** }
 248              		.loc 1 50 1 view .LVU48
 249 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 250              	.LVL21:
 251              	.L19:
 252              		.loc 1 50 1 view .LVU49
 253              		.align	3
 254              	.L18:
 255 0040 00000000 		.word	0
 256 0044 E0FFEF40 		.word	1089470432
 257              		.cfi_endproc
 258              	.LFE370:
 260              		.section	.text._ZL18set_motorDirectionP12motor_config9Direction,"ax",%progbits
 261              		.align	1
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	_ZL18set_motorDirectionP12motor_config9Direction:
 268              	.LVL22:
 269              	.LFB369:
  25:Core/Src/motor.cpp ****         if (d == Direction::CLOCKWISE)       
 270              		.loc 1 25 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
  25:Core/Src/motor.cpp ****         if (d == Direction::CLOCKWISE)       
 274              		.loc 1 25 1 is_stmt 0 view .LVU51
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI3:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280 0002 0446     		mov	r4, r0
  26:Core/Src/motor.cpp ****         {
 281              		.loc 1 26 9 is_stmt 1 view .LVU52
 282 0004 61B1     		cbz	r1, .L25
  32:Core/Src/motor.cpp ****         {
 283              		.loc 1 32 14 view .LVU53
 284 0006 0129     		cmp	r1, #1
 285 0008 15D0     		beq	.L26
  39:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 286              		.loc 1 39 17 view .LVU54
  39:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 287              		.loc 1 39 34 is_stmt 0 view .LVU55
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 7


 288 000a 0022     		movs	r2, #0
 289 000c 8189     		ldrh	r1, [r0, #12]
 290              	.LVL23:
  39:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 291              		.loc 1 39 34 view .LVU56
 292 000e 8068     		ldr	r0, [r0, #8]
 293              	.LVL24:
  39:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 294              		.loc 1 39 34 view .LVU57
 295 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 296              	.LVL25:
  40:Core/Src/motor.cpp ****         }
 297              		.loc 1 40 17 is_stmt 1 view .LVU58
  40:Core/Src/motor.cpp ****         }
 298              		.loc 1 40 34 is_stmt 0 view .LVU59
 299 0014 0022     		movs	r2, #0
 300 0016 A18A     		ldrh	r1, [r4, #20]
 301 0018 2069     		ldr	r0, [r4, #16]
 302 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 303              	.LVL26:
 304              	.L20:
  42:Core/Src/motor.cpp **** 
 305              		.loc 1 42 1 view .LVU60
 306 001e 10BD     		pop	{r4, pc}
 307              	.LVL27:
 308              	.L25:
  28:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 309              		.loc 1 28 17 is_stmt 1 view .LVU61
  28:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 310              		.loc 1 28 34 is_stmt 0 view .LVU62
 311 0020 0122     		movs	r2, #1
 312 0022 8189     		ldrh	r1, [r0, #12]
 313              	.LVL28:
  28:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 314              		.loc 1 28 34 view .LVU63
 315 0024 8068     		ldr	r0, [r0, #8]
 316              	.LVL29:
  28:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_RESET);
 317              		.loc 1 28 34 view .LVU64
 318 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 319              	.LVL30:
  29:Core/Src/motor.cpp ****                 
 320              		.loc 1 29 17 is_stmt 1 view .LVU65
  29:Core/Src/motor.cpp ****                 
 321              		.loc 1 29 34 is_stmt 0 view .LVU66
 322 002a 0022     		movs	r2, #0
 323 002c A18A     		ldrh	r1, [r4, #20]
 324 002e 2069     		ldr	r0, [r4, #16]
 325 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 326              	.LVL31:
 327 0034 F3E7     		b	.L20
 328              	.LVL32:
 329              	.L26:
  34:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_SET);
 330              		.loc 1 34 17 is_stmt 1 view .LVU67
  34:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_SET);
 331              		.loc 1 34 34 is_stmt 0 view .LVU68
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 8


 332 0036 0022     		movs	r2, #0
 333 0038 8189     		ldrh	r1, [r0, #12]
 334              	.LVL33:
  34:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_SET);
 335              		.loc 1 34 34 view .LVU69
 336 003a 8068     		ldr	r0, [r0, #8]
 337              	.LVL34:
  34:Core/Src/motor.cpp ****                 HAL_GPIO_WritePin(m->in2_port, m->in2_pin, GPIO_PIN_SET);
 338              		.loc 1 34 34 view .LVU70
 339 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 340              	.LVL35:
  35:Core/Src/motor.cpp ****         }
 341              		.loc 1 35 17 is_stmt 1 view .LVU71
  35:Core/Src/motor.cpp ****         }
 342              		.loc 1 35 34 is_stmt 0 view .LVU72
 343 0040 0122     		movs	r2, #1
 344 0042 A18A     		ldrh	r1, [r4, #20]
 345 0044 2069     		ldr	r0, [r4, #16]
 346 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 347              	.LVL36:
 348 004a E8E7     		b	.L20
 349              		.cfi_endproc
 350              	.LFE369:
 352              		.section	.text._ZN5motor9set_omegaEf,"ax",%progbits
 353              		.align	1
 354              		.global	_ZN5motor9set_omegaEf
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu fpv4-sp-d16
 360              	_ZN5motor9set_omegaEf:
 361              	.LVL37:
 362              	.LFB371:
  51:Core/Src/motor.cpp **** 
  52:Core/Src/motor.cpp **** void motor::set_omega(float omega)
  53:Core/Src/motor.cpp **** {
 363              		.loc 1 53 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		.loc 1 53 1 is_stmt 0 view .LVU74
 368 0000 10B5     		push	{r4, lr}
 369              	.LCFI4:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 4, -8
 372              		.cfi_offset 14, -4
 373 0002 2DED028B 		vpush.64	{d8}
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 16
 376              		.cfi_offset 80, -16
 377              		.cfi_offset 81, -12
 378 0006 0446     		mov	r4, r0
  54:Core/Src/motor.cpp **** 	// printf("omega = %d", (int)(omega*100));
  55:Core/Src/motor.cpp **** 	if (omega > motor_->max_omega){
 379              		.loc 1 55 2 is_stmt 1 view .LVU75
 380              		.loc 1 55 14 is_stmt 0 view .LVU76
 381 0008 0068     		ldr	r0, [r0]
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 9


 382              	.LVL38:
 383              		.loc 1 55 22 view .LVU77
 384 000a 90ED008A 		vldr.32	s16, [r0]
 385              		.loc 1 55 2 view .LVU78
 386 000e B4EEC08A 		vcmpe.f32	s16, s0
 387 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 388 0016 08D4     		bmi	.L28
  56:Core/Src/motor.cpp **** 		omega = motor_->max_omega;
  57:Core/Src/motor.cpp **** 	}
  58:Core/Src/motor.cpp **** 	else if(omega < -motor_->max_omega){
 389              		.loc 1 58 7 is_stmt 1 view .LVU79
 390              		.loc 1 58 18 is_stmt 0 view .LVU80
 391 0018 B1EE488A 		vneg.f32	s16, s16
 392              		.loc 1 58 7 view .LVU81
 393 001c B4EEC08A 		vcmpe.f32	s16, s0
 394 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 395 0024 01DC     		bgt	.L28
 396 0026 B0EE408A 		vmov.f32	s16, s0
 397              	.L28:
 398              	.LVL39:
  59:Core/Src/motor.cpp **** 		omega = -motor_->max_omega;
  60:Core/Src/motor.cpp **** 	}
  61:Core/Src/motor.cpp ****         if (omega < -motor_->tolerance) {
 399              		.loc 1 61 9 is_stmt 1 view .LVU82
 400              		.loc 1 61 30 is_stmt 0 view .LVU83
 401 002a D0ED017A 		vldr.32	s15, [r0, #4]
 402              		.loc 1 61 21 view .LVU84
 403 002e B1EE677A 		vneg.f32	s14, s15
 404              		.loc 1 61 9 view .LVU85
 405 0032 B4EEC87A 		vcmpe.f32	s14, s16
 406 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 407 003a 0FDC     		bgt	.L39
  62:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::CLOCKWISE);
  63:Core/Src/motor.cpp ****        		set_motorOmega(motor_, fabs(omega));
  64:Core/Src/motor.cpp ****         }
  65:Core/Src/motor.cpp ****         else if (omega > motor_->tolerance) {
 408              		.loc 1 65 14 is_stmt 1 view .LVU86
 409 003c F4EEC87A 		vcmpe.f32	s15, s16
 410 0040 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 411 0044 13D5     		bpl	.L37
  66:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::ANTICLOCKWISE);
 412              		.loc 1 66 10 view .LVU87
 413              		.loc 1 66 28 is_stmt 0 view .LVU88
 414 0046 0121     		movs	r1, #1
 415 0048 FFF7FEFF 		bl	_ZL18set_motorDirectionP12motor_config9Direction
 416              	.LVL40:
  67:Core/Src/motor.cpp ****        		set_motorOmega(motor_, fabs(omega));
 417              		.loc 1 67 10 is_stmt 1 view .LVU89
 418              	.LBB6:
 419              	.LBI6:
 420              		.file 2 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\c++\\9.3.1\\cmath"
   1:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
   3:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** //
   5:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // software; you can redistribute it and/or modify it under the
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 10


   7:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // any later version.
  10:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  11:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // GNU General Public License for more details.
  15:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  16:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  20:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  25:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** /** @file include/cmath
  26:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *
  29:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  *  as macros in C).
  33:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****  */
  34:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  35:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** //
  36:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** //
  38:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  39:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #pragma GCC system_header
  40:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  41:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #include <bits/c++config.h>
  42:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #include <ext/type_traits.h>
  44:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #include_next <math.h>
  46:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #include <bits/std_abs.h>
  48:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  49:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  52:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef div
  54:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef acos
  55:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef asin
  56:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef atan
  57:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef atan2
  58:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef ceil
  59:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef cos
  60:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef cosh
  61:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef exp
  62:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef fabs
  63:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef floor
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 11


  64:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef fmod
  65:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef frexp
  66:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef ldexp
  67:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef log
  68:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef log10
  69:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef modf
  70:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef pow
  71:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef sin
  72:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef sinh
  73:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef sqrt
  74:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef tan
  75:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #undef tanh
  76:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  77:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** extern "C++"
  78:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** {
  79:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** {
  81:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  83:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::acos;
  84:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  85:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   acos(float __x)
  88:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  90:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   acos(long double __x)
  92:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
  94:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
  95:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
  96:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
  99:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     acos(_Tp __x)
 100:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 102:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::asin;
 103:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 104:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   asin(float __x)
 107:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 109:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   asin(long double __x)
 111:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 113:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 114:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
 115:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
 118:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     asin(_Tp __x)
 119:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 12


 121:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::atan;
 122:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 123:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   atan(float __x)
 126:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 128:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   atan(long double __x)
 130:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 132:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 133:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
 134:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
 137:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     atan(_Tp __x)
 138:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 140:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::atan2;
 141:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 142:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   atan2(float __y, float __x)
 145:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 147:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 151:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 152:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     {
 157:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     }
 160:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 161:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::ceil;
 162:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 163:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   ceil(float __x)
 166:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 168:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   ceil(long double __x)
 170:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 172:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 173:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
 174:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
 177:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     ceil(_Tp __x)
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 13


 178:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 180:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::cos;
 181:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 182:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   cos(float __x)
 185:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 187:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   cos(long double __x)
 189:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 191:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 192:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
 193:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
 196:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     cos(_Tp __x)
 197:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 199:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::cosh;
 200:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 201:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   cosh(float __x)
 204:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 206:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   cosh(long double __x)
 208:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 210:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 211:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
 212:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
 215:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     cosh(_Tp __x)
 216:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 218:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::exp;
 219:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 220:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   exp(float __x)
 223:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 225:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   exp(long double __x)
 227:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #endif
 229:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 230:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   template<typename _Tp>
 231:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****                                     double>::__type
 234:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     exp(_Tp __x)
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 14


 235:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 237:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   using ::fabs;
 238:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** 
 239:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   fabs(float __x)
 421              		.loc 2 241 3 view .LVU90
 422              	.LBB7:
 242:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_fabsf(__x); }
 423              		.loc 2 242 5 view .LVU91
 424              		.loc 2 242 5 is_stmt 0 view .LVU92
 425              	.LBE7:
 426              	.LBE6:
 427              		.loc 1 67 24 view .LVU93
 428 004c B0EEC80A 		vabs.f32	s0, s16
 429 0050 2068     		ldr	r0, [r4]
 430 0052 FFF7FEFF 		bl	_ZL14set_motorOmegaP12motor_configf
 431              	.LVL41:
 432              	.L27:
  68:Core/Src/motor.cpp ****         }
  69:Core/Src/motor.cpp ****         else {
  70:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::STOP);
  71:Core/Src/motor.cpp ****        		set_motorOmega(motor_, 0);
  72:Core/Src/motor.cpp ****         }
  73:Core/Src/motor.cpp **** }...
 433              		.loc 1 73 1 view .LVU94
 434 0056 BDEC028B 		vldm	sp!, {d8}
 435              	.LCFI6:
 436              		.cfi_remember_state
 437              		.cfi_restore 80
 438              		.cfi_restore 81
 439              		.cfi_def_cfa_offset 8
 440              	.LVL42:
 441              		.loc 1 73 1 view .LVU95
 442 005a 10BD     		pop	{r4, pc}
 443              	.LVL43:
 444              	.L39:
 445              	.LCFI7:
 446              		.cfi_restore_state
  62:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::CLOCKWISE);
 447              		.loc 1 62 10 is_stmt 1 view .LVU96
  62:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::CLOCKWISE);
 448              		.loc 1 62 28 is_stmt 0 view .LVU97
 449 005c 0021     		movs	r1, #0
 450 005e FFF7FEFF 		bl	_ZL18set_motorDirectionP12motor_config9Direction
 451              	.LVL44:
  63:Core/Src/motor.cpp ****        		set_motorOmega(motor_, fabs(omega));
 452              		.loc 1 63 10 is_stmt 1 view .LVU98
 453              	.LBB8:
 454              	.LBI8:
 241:c:\vsarm\armcc\arm-none-eabi\include\c++\9.3.1\cmath ****   { return __builtin_fabsf(__x); }
 455              		.loc 2 241 3 view .LVU99
 456              	.LBB9:
 457              		.loc 2 242 5 view .LVU100
 458              		.loc 2 242 5 is_stmt 0 view .LVU101
 459              	.LBE9:
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 15


 460              	.LBE8:
  63:Core/Src/motor.cpp ****        		set_motorOmega(motor_, fabs(omega));
 461              		.loc 1 63 24 view .LVU102
 462 0062 B0EEC80A 		vabs.f32	s0, s16
 463 0066 2068     		ldr	r0, [r4]
 464 0068 FFF7FEFF 		bl	_ZL14set_motorOmegaP12motor_configf
 465              	.LVL45:
 466 006c F3E7     		b	.L27
 467              	.L37:
  70:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::STOP);
 468              		.loc 1 70 10 is_stmt 1 view .LVU103
  70:Core/Src/motor.cpp ****         	set_motorDirection(motor_, Direction::STOP);
 469              		.loc 1 70 28 is_stmt 0 view .LVU104
 470 006e 0221     		movs	r1, #2
 471 0070 FFF7FEFF 		bl	_ZL18set_motorDirectionP12motor_config9Direction
 472              	.LVL46:
  71:Core/Src/motor.cpp ****        		set_motorOmega(motor_, 0);
 473              		.loc 1 71 10 is_stmt 1 view .LVU105
  71:Core/Src/motor.cpp ****        		set_motorOmega(motor_, 0);
 474              		.loc 1 71 24 is_stmt 0 view .LVU106
 475 0074 9FED020A 		vldr.32	s0, .L40
 476 0078 2068     		ldr	r0, [r4]
 477 007a FFF7FEFF 		bl	_ZL14set_motorOmegaP12motor_configf
 478              	.LVL47:
 479              		.loc 1 73 1 view .LVU107
 480 007e EAE7     		b	.L27
 481              	.L41:
 482              		.align	2
 483              	.L40:
 484 0080 00000000 		.word	0
 485              		.cfi_endproc
 486              	.LFE371:
 488              		.text
 489              	.Letext0:
 490              		.file 3 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 491              		.file 4 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 492              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 493              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 494              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 495              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 496              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 497              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 498              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 499              		.file 12 "c:\\vsarm\\armcc\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 500              		.file 13 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\_types.h"
 501              		.file 14 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\reent.h"
 502              		.file 15 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\sys\\lock.h"
 503              		.file 16 "Core/Inc/tim.h"
 504              		.file 17 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\c++\\9.3.1\\bits\\std_abs.h"
 505              		.file 18 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\c++\\9.3.1\\arm-none-eabi\\thumb\\v7e-m+fp\\ha
 506              		.file 19 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\math.h"
 507              		.file 20 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\stdlib.h"
 508              		.file 21 "c:\\vsarm\\armcc\\arm-none-eabi\\include\\c++\\9.3.1\\math.h"
 509              		.file 22 "Core/Inc/motor.h"
 510              		.file 23 "<built-in>"
ARM GAS  C:\Users\one\AppData\Local\Temp\ccmIQtOz.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 motor.cpp
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:18     .text._ZL11time_periodt:00000000 $t
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:25     .text._ZL11time_periodt:00000000 _ZL11time_periodt
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:50     .text._ZL11time_periodt:00000010 $d
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:55     .text._ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt:00000000 $t
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:61     .text._ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt:00000000 _ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:139    .text._ZL21set_DutyCycle_PrimaryP17TIM_HandleTypeDefmt:0000004c $d
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:144    .text._ZL13set_DutyCycleP12motor_configt:00000000 $t
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:150    .text._ZL13set_DutyCycleP12motor_configt:00000000 _ZL13set_DutyCycleP12motor_configt
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:184    .text._ZL14set_motorOmegaP12motor_configf:00000000 $t
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:190    .text._ZL14set_motorOmegaP12motor_configf:00000000 _ZL14set_motorOmegaP12motor_configf
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:255    .text._ZL14set_motorOmegaP12motor_configf:00000040 $d
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:261    .text._ZL18set_motorDirectionP12motor_config9Direction:00000000 $t
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:267    .text._ZL18set_motorDirectionP12motor_config9Direction:00000000 _ZL18set_motorDirectionP12motor_config9Direction
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:353    .text._ZN5motor9set_omegaEf:00000000 $t
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:360    .text._ZN5motor9set_omegaEf:00000000 _ZN5motor9set_omegaEf
C:\Users\one\AppData\Local\Temp\ccmIQtOz.s:484    .text._ZN5motor9set_omegaEf:00000080 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2uiz
HAL_GPIO_WritePin
